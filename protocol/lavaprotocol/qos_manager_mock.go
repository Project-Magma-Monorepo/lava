// Code generated by MockGen. DO NOT EDIT.
// Source: protocol/lavaprotocol/request_builder.go
//
// Generated by this command:
//
//	mockgen -source=protocol/lavaprotocol/request_builder.go -destination protocol/lavaprotocol/qos_manager_mock.go -package lavaprotocol -exclude_interfaces=HeaderFilterer
//

// Package lavaprotocol is a generated GoMock package.
package lavaprotocol

import (
	reflect "reflect"

	types "github.com/lavanet/lava/v4/x/pairing/types"
	gomock "go.uber.org/mock/gomock"
)

// MockQoSManager is a mock of QoSManager interface.
type MockQoSManager struct {
	ctrl     *gomock.Controller
	recorder *MockQoSManagerMockRecorder
	isgomock struct{}
}

// MockQoSManagerMockRecorder is the mock recorder for MockQoSManager.
type MockQoSManagerMockRecorder struct {
	mock *MockQoSManager
}

// NewMockQoSManager creates a new mock instance.
func NewMockQoSManager(ctrl *gomock.Controller) *MockQoSManager {
	mock := &MockQoSManager{ctrl: ctrl}
	mock.recorder = &MockQoSManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQoSManager) EXPECT() *MockQoSManagerMockRecorder {
	return m.recorder
}

// GetLastQoSReport mocks base method.
func (m *MockQoSManager) GetLastQoSReport(epoch uint64, sessionId int64) *types.QualityOfServiceReport {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastQoSReport", epoch, sessionId)
	ret0, _ := ret[0].(*types.QualityOfServiceReport)
	return ret0
}

// GetLastQoSReport indicates an expected call of GetLastQoSReport.
func (mr *MockQoSManagerMockRecorder) GetLastQoSReport(epoch, sessionId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastQoSReport", reflect.TypeOf((*MockQoSManager)(nil).GetLastQoSReport), epoch, sessionId)
}

// GetLastReputationQoSReportRaw mocks base method.
func (m *MockQoSManager) GetLastReputationQoSReportRaw(epoch uint64, sessionId int64) *types.QualityOfServiceReport {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLastReputationQoSReportRaw", epoch, sessionId)
	ret0, _ := ret[0].(*types.QualityOfServiceReport)
	return ret0
}

// GetLastReputationQoSReportRaw indicates an expected call of GetLastReputationQoSReportRaw.
func (mr *MockQoSManagerMockRecorder) GetLastReputationQoSReportRaw(epoch, sessionId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLastReputationQoSReportRaw", reflect.TypeOf((*MockQoSManager)(nil).GetLastReputationQoSReportRaw), epoch, sessionId)
}
