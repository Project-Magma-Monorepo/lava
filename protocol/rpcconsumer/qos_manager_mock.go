// Code generated by MockGen. DO NOT EDIT.
// Source: protocol/rpcconsumer/relay_processor.go
//
// Generated by this command:
//
//	mockgen -source=protocol/rpcconsumer/relay_processor.go -destination protocol/rpcconsumer/qos_manager_mock.go -package rpcconsumer -exclude_interfaces=MetricsInterface,chainIdAndApiInterfaceGetter
//

// Package rpcconsumer is a generated GoMock package.
package rpcconsumer

import (
	reflect "reflect"

	qos "github.com/lavanet/lava/v4/protocol/qos"
	gomock "go.uber.org/mock/gomock"
)

// MockQoSManager is a mock of QoSManager interface.
type MockQoSManager struct {
	ctrl     *gomock.Controller
	recorder *MockQoSManagerMockRecorder
	isgomock struct{}
}

// MockQoSManagerMockRecorder is the mock recorder for MockQoSManager.
type MockQoSManagerMockRecorder struct {
	mock *MockQoSManager
}

// NewMockQoSManager creates a new mock instance.
func NewMockQoSManager(ctrl *gomock.Controller) *MockQoSManager {
	mock := &MockQoSManager{ctrl: ctrl}
	mock.recorder = &MockQoSManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockQoSManager) EXPECT() *MockQoSManagerMockRecorder {
	return m.recorder
}

// DegradeAvailability mocks base method.
func (m *MockQoSManager) DegradeAvailability(epoch uint64, sessionId int64) qos.DoneChan {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DegradeAvailability", epoch, sessionId)
	ret0, _ := ret[0].(qos.DoneChan)
	return ret0
}

// DegradeAvailability indicates an expected call of DegradeAvailability.
func (mr *MockQoSManagerMockRecorder) DegradeAvailability(epoch, sessionId any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DegradeAvailability", reflect.TypeOf((*MockQoSManager)(nil).DegradeAvailability), epoch, sessionId)
}
