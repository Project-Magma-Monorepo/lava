# Define upstream for SUI JSON-RPC
upstream sui_backend {
    hash $http_lava_lb_unique_id consistent;
    keepalive 32;
    keepalive_timeout 1s;
    server provider1:2220 max_fails=1 fail_timeout=1s;
}


# Modified LAV1 upstream configuration
upstream lav1_backend {
    hash $http_lava_lb_unique_id consistent;
    keepalive 32;
    keepalive_timeout 60s;  # Increased timeout
    server provider2:3334 max_fails=3 fail_timeout=10s;  # More lenient failure settings
}


# Define upstream for consumer
upstream consumer_backend {
    server consumer:2220 max_fails=1 fail_timeout=1s;
}

log_format grpc_json escape=json '{"uri":"$uri","http-status":$status,"lava_lb_unique_id":"$http_lava_lb_unique_id","upstream":"$upstream_addr"}';

map $upstream_trailer_grpc_status $grpc_status {
    default $upstream_trailer_grpc_status;
    ''      $sent_http_grpc_status;
}

# SUI on port 80
server {
    listen 80 ssl;
    http2 on;
    server_name nginx;

    access_log /dev/stdout grpc_json;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    location / {
        grpc_pass grpc://sui_backend;
        grpc_set_header X-Real-IP $remote_addr;

        # Add CORS headers
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,lava_lb_unique_id,client-sdk-version,client-target-api-version,client-request-method,client-sdk-type,x-grpc-web,lava-sdk-relay-timeout' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,lava_lb_unique_id,client-sdk-version,client-target-api-version,client-request-method,client-sdk-type,x-grpc-web,lava-sdk-relay-timeout';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}


# LAV1 on port 81
server {
    listen 81 ssl;
    http2 on;  # Changed to explicit http2
    server_name nginx;

    access_log /dev/stdout grpc_json;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # Improve SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # gRPC specific settings
    grpc_read_timeout 60s;
    grpc_send_timeout 60s;
    grpc_connect_timeout 60s;
    grpc_buffer_size 64k;
    grpc_next_upstream error timeout http_500 http_502 http_503 http_504;
    grpc_next_upstream_tries 3;
    grpc_next_upstream_timeout 15s;

    location / {
        grpc_pass grpc://lav1_backend;
        grpc_set_header X-Real-IP $remote_addr;
        grpc_set_header Host $host;

        # Add CORS headers
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,lava_lb_unique_id,client-sdk-version,client-target-api-version,client-request-method,client-sdk-type,x-grpc-web,lava-sdk-relay-timeout' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,lava_lb_unique_id,client-sdk-version,client-target-api-version,client-request-method,client-sdk-type,x-grpc-web,lava-sdk-relay-timeout';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Error handling
        error_page 502 504 = @error502;
    }

    location @error502 {
        add_header Content-Type application/grpc always;
        return 502;
    }
}

# Main HTTPS server
server {
    listen 443 ssl;
    http2 on;
    server_name sui.obsuidian.xyz;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    error_log /dev/stdout debug;
    access_log /dev/stdout;

    # For gRPC requests
    location /sui.SuiService/ {
        grpc_pass grpc://sui_backend;
        grpc_set_header X-Real-IP $remote_addr;

        # Add CORS headers
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,lava_lb_unique_id,client-sdk-version,client-target-api-version,client-request-method,client-sdk-type,x-grpc-web,lava-sdk-relay-timeout' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,lava_lb_unique_id,client-sdk-version,client-target-api-version,client-request-method,client-sdk-type,x-grpc-web,lava-sdk-relay-timeout';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Default handler for JSON-RPC requests
    location / {
        proxy_pass http://consumer_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Add CORS headers
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,lava_lb_unique_id,client-sdk-version,client-target-api-version,client-request-method,client-sdk-type,x-grpc-web,lava-sdk-relay-timeout' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Handle OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,lava_lb_unique_id,client-sdk-version,client-target-api-version,client-request-method,client-sdk-type,x-grpc-web,lava-sdk-relay-timeout';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
}
